/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

const urls = {"admin:index":{"route":"/admin/","args":{}},"admin:login":{"route":"/admin/login/","args":{}},"admin:logout":{"route":"/admin/logout/","args":{}},"admin:password_change":{"route":"/admin/password_change/","args":{}},"admin:password_change_done":{"route":"/admin/password_change/done/","args":{}},"admin:jsi18n":{"route":"/admin/jsi18n/","args":{}},"admin:view_on_site":{"route":"/admin/r/<int:content_type_id>/<path:object_id>/","args":{"content_type_id":"number","object_id":"string"}},"hello-world/":{"route":"/hello-world/","args":{}},"sample-form/":{"route":"/sample-form/","args":{}},"composers/":{"route":"/composers/","args":{}},"composers/create/":{"route":"/composers/create/","args":{}},"operas/create/":{"route":"/operas/create/","args":{}},"browser/":{"route":"/browser/","args":{}},"typed-template/":{"route":"/typed-template/","args":{}}};

interface URLMap {
    admin_index: admin_index;
    admin_login: admin_login;
    admin_logout: admin_logout;
    admin_password_change: admin_password_change;
    admin_password_change_done: admin_password_change_done;
    admin_jsi18n: admin_jsi18n;
    admin_view_on_site: admin_view_on_site;
    hello_world_: hello_world_;
    sample_form_: sample_form_;
    composers_: composers_;
    composers_create_: composers_create_;
    operas_create_: operas_create_;
    browser_: browser_;
    typed_template_: typed_template_;
}

interface admin_index {
    name: 'admin:index';
    args: admin_index_args;
}

interface admin_index_args {
}

interface admin_login {
    name: 'admin:login';
    args: admin_login_args;
}

interface admin_login_args {
}

interface admin_logout {
    name: 'admin:logout';
    args: admin_logout_args;
}

interface admin_logout_args {
}

interface admin_password_change {
    name: 'admin:password_change';
    args: admin_password_change_args;
}

interface admin_password_change_args {
}

interface admin_password_change_done {
    name: 'admin:password_change_done';
    args: admin_password_change_done_args;
}

interface admin_password_change_done_args {
}

interface admin_jsi18n {
    name: 'admin:jsi18n';
    args: admin_jsi18n_args;
}

interface admin_jsi18n_args {
}

interface admin_view_on_site {
    name: 'admin:view_on_site';
    args: admin_view_on_site_args;
}

interface admin_view_on_site_args {
    content_type_id: number;
    object_id: string;
}

interface hello_world_ {
    name: 'hello-world/';
    args: hello_world__args;
}

interface hello_world__args {
}

interface sample_form_ {
    name: 'sample-form/';
    args: sample_form__args;
}

interface sample_form__args {
}

interface composers_ {
    name: 'composers/';
    args: composers__args;
}

interface composers__args {
}

interface composers_create_ {
    name: 'composers/create/';
    args: composers_create__args;
}

interface composers_create__args {
}

interface operas_create_ {
    name: 'operas/create/';
    args: operas_create__args;
}

interface operas_create__args {
}

interface browser_ {
    name: 'browser/';
    args: browser__args;
}

interface browser__args {
}

interface typed_template_ {
    name: 'typed-template/';
    args: typed_template__args;
}

interface typed_template__args {
}

type WithArguments = admin_view_on_site;
type WithoutArguments = admin_index|admin_login|admin_logout|admin_password_change|admin_password_change_done|admin_jsi18n|hello_world_|sample_form_|composers_|composers_create_|operas_create_|browser_|typed_template_;


type All = WithArguments|WithoutArguments;
export function reverse<T extends WithoutArguments['name']>(name: T): string;
export function reverse<T extends WithArguments['name']>(name: T, args: Extract<WithArguments, {name: T}>['args']): string;
export function reverse<T extends All['name']>(name: T, args?: Extract<WithArguments, {name: T}>['args']): string {
    let route = urls[name].route;

    if (args != null) {
        for (const token of Object.keys(args)) {
            route = route.replace(new RegExp('<(.+?:)' + token + '>'), (args as any)[token]);
        }
    }
    return route;
}

import React from "react"

interface FooProps {
    thing: string;
}

interface BarProps {
    other: number;
}

class Foo extends React.Component<FooProps, {}> {
}

class Bar extends React.Component<BarProps, {}> {
}

type FooRFC = React.SFC<FooProps>;

const fooRFC: FooRFC = (props) => <div>{props.thing}</div>
const fooAsProps = (props: FooProps) => <div>{props.thing}</div>

class FooImplementation extends Foo {

}

class BarImplementation extends Bar {

}

type Checker<T, U extends T> = {};


type FooCheck = Checker<Foo,FooImplementation>
type BarCheck = Checker<Foo,FooImplementation>

const FooCheckValue: typeof Foo = FooImplementation;
const FooCheckValue: typeof Foo = FooImplementation;